#include <stdio.h>

#define LINEAR 1
#define FORM 0

const TAX = 0.13;

struct Item {
	double price;
	int sku;
	int isTaxed;
	int quantity;
	int minQuantity;
	char name[21];
};

double totalAfterTax(struct Item item) {
	double totalAfterTax = 0;

	if (item.isTaxed == 1) {
		//printf("Quanity: %d, Price: %.2lf", item.price, item.quantity);
		totalAfterTax = (item.price * item.quantity) * (1+TAX);
	}
	else if (item.isTaxed == 0) {
		totalAfterTax = (item.price * item.quantity);

	}

	return totalAfterTax;
}



int isLowQuantity(struct Item item) {

	if (item.quantity < item.minQuantity) {
		return 1;
	}
	else if (item.quantity >= item.minQuantity) {
		return 0;
	}

}


void display(const struct Item a[]) {

	for (int i = 0; i < 21; i++) {
		printf("%.2lf, %d, %d, %d, %d, %s\n", a[i].price, a[i].sku, a[i].isTaxed, a[i].quantity, a[i].minQuantity, a[i].name);
	}

}

struct Item itemEntry(int sku) {
	char name[21] = { 0 };
	double price;
	int quantity;
	int minQty;
	char isTaxed;
	int setSku;

	setSku = sku;
	printf("        SKU: %d", setSku);

	printf("       Name: ");
	scanf("%20[^\n]", &name);

	printf("      Price: ");
	price = getdouble();

	printf("   Quantity: ");
	quantity = getInt();

	printf("Minimun Qty: ");
	minQty = getInt();

	printf("   Is taxed: ");
	isTaxed = yes();


}

void displayItem(struct Item item, int linear) {

	double totalPrice;
	int lowQuantity;

	totalPrice = totalAfterTax(item);
	lowQuantity = isLowQuantity(item);

	if (linear == 1) {

		if (lowQuantity == 0) {
			printf("----+---+--------------------+--------+-----+-----+-----+------------|---\n");
			printf("|%3d|%3d|%20s|%8.2lf|  %3d| %3d |%3d  |%12.2lf|\n", 1, item.sku, item.name, item.price, item.isTaxed, item.quantity, item.minQuantity, totalPrice);
		}
		else if (lowQuantity == 1) {
			printf("----+---+--------------------+--------+-----+-----+-----+------------|---\n");
			printf("|%3d|%3d|%20s|%8.2lf|  %3d| %3d |%3d  |%12.2lf|***\n", 1, item.sku, item.name, item.price, item.isTaxed, item.quantity, item.minQuantity, totalPrice);
		}
	}

	else if (linear == 0) {
		if (lowQuantity == 0) {

			printf("        SKU: %d\n       Name: %s\n      Price: %.2lf\n    Quanity: %d\n", item.sku, item.name, item.price, item.quantity);
			printf("Minimun Qty: %d\n   Is Taxed: %d\n\n", item.minQuantity, item.isTaxed);
		}
		else if (lowQuantity == 1) {

			printf("        SKU: %d\n       Name: %s\n      Price: %.2lf\n    Quanity: %d\n", item.sku, item.name, item.price, item.quantity);
			printf("Minimun Qty: %d\n   Is Taxed: %d\n\n", item.minQuantity, item.isTaxed);
			printf("WARNING: QUantity low, please order ASAP!!!\n\n");

		}
	}
}

int main() {

	double totalPrice = 0;
	struct Item store[20] = {
		//price, SKU, isTaxed, Qty, minQty, name;
		{ 4.4,275,0,10,2,"Royal Apples" },
		{ 5.99,386,0,20,4,"Watermelon" },
		{ 3.99,240,0,30,5,"Blueberries" },
		{ 10.56,916,0,20,3,"Seedless Grapes" },
		{ 2.5,385,0,5,2,"Pomegranate" },
		{ 0.44,495,0,100,30,"Banana" },
		{ 0.5,316,0,123,10,"Kiwifruit" },
		{ 4.49,355,1,20,5,"Chicken Alfredo" },
		{ 5.49,846,1,3,5,"Veal Parmigiana" },
		{ 5.29,359,1,40,5,"Beffsteak Pie" },
		{ 4.79,127,1,30,3,"Curry Checken" },
		{ 16.99,238,1,10,2,"Tide Detergent" },
		{ 10.49,324,1,40,5,"Tide Liq. Pods" },
		{ 10.99,491,1,50,5,"Tide Powder Det." },
		{ 3.69,538,1,1,5,"Lays Chips S&V" },
		{ 3.29,649,1,15,5,"Joe Org Chips" },
		{ 1.79,731,1,100,10,"Allen's Apple Juice" },
		{ 6.69,984,1,30,3,"Coke 24 Pack" },
		{ 7.29,350,1,50,5,"Nestea 24 Pack" },
		{ 6.49,835,1,20,2,"7up 24 pack" }
	};
	//display(store);

	int inSku;
	int i = 0;
	for (i = 0; i < 20; i++) {
		printf("Enter SKU: ");
		scanf("%d", inSku);
		store[i] = itemEntry(inSku);
	}


	return 0;
}
